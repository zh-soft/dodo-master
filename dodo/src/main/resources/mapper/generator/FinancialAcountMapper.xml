<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.blog.dao.FinancialAcountDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.bootdo.blog.entity.FinancialAcountEntity" id="financialAcountMap">
        <result property="id" column="id"/>
        <result property="expendId" column="expend_id"/>
        <result property="incomeId" column="income_id"/>
        <result property="acountType" column="acount_type"/>
        <result property="totalExpend" column="total_expend"/>
        <result property="totalIncome" column="total_income"/>
        <result property="totalAcount" column="total_acount"/>
        <result property="oldAcount" column="old_acount"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createUser" column="create_user"/>
        <result property="updateUser" column="update_user"/>
    </resultMap>

	<select id="queryObject" resultType="com.bootdo.blog.entity.FinancialAcountEntity">
		select * from financial_acount where id = #{value}
	</select>

	<select id="queryList" resultType="com.bootdo.blog.entity.FinancialAcountEntity">
		select * from financial_acount
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from financial_acount 
	</select>
	 
	<insert id="save" parameterType="com.bootdo.blog.entity.FinancialAcountEntity" useGeneratedKeys="true" keyProperty="id">
		insert into financial_acount
		(
			`expend_id`, 
			`income_id`, 
			`acount_type`, 
			`total_expend`, 
			`total_income`, 
			`total_acount`, 
			`old_acount`, 
			`create_time`, 
			`update_time`, 
			`create_user`, 
			`update_user`
		)
		values
		(
			#{expendId}, 
			#{incomeId}, 
			#{acountType}, 
			#{totalExpend}, 
			#{totalIncome}, 
			#{totalAcount}, 
			#{oldAcount}, 
			#{createTime}, 
			#{updateTime}, 
			#{createUser}, 
			#{updateUser}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.blog.entity.FinancialAcountEntity">
		update financial_acount 
		<set>
			<if test="expendId != null">`expend_id` = #{expendId}, </if>
			<if test="incomeId != null">`income_id` = #{incomeId}, </if>
			<if test="acountType != null">`acount_type` = #{acountType}, </if>
			<if test="totalExpend != null">`total_expend` = #{totalExpend}, </if>
			<if test="totalIncome != null">`total_income` = #{totalIncome}, </if>
			<if test="totalAcount != null">`total_acount` = #{totalAcount}, </if>
			<if test="oldAcount != null">`old_acount` = #{oldAcount}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="updateUser != null">`update_user` = #{updateUser}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from financial_acount where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from financial_acount where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>